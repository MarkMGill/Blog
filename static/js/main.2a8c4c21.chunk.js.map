{"version":3,"sources":["components/apis/jsonPlaceholder.js","components/actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","reducers/loveCounterArrReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","loveCounterArr","index","getState","console","log","loveCountArr","length","posts","map","post","el","ind","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","iStyle","cursor","fetchPostsAndUsers","heartCount","key","title","body","onClick","style","heart","renderList","_","uniq","forEach","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"6QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yC,iBCQAC,EAAa,wDAAM,WAAMC,GAAN,eAAAC,EAAA,qEACLC,EAAgBC,IAAI,UADf,OACtBC,EADsB,OAG5BJ,EAAS,CAACK,KAAM,cAAeC,QAASF,EAASG,OAHrB,yCAAN,uDAMbC,EAAY,SAAAC,GAAE,6CAAI,WAAMT,GAAN,eAAAC,EAAA,qEACJC,EAAgBC,IAAhB,iBAA8BM,IAD1B,OACrBL,EADqB,OAG3BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHtB,yCAAJ,uDAMdG,EAAiB,SAACC,GAAD,OAAW,SAACX,EAAUY,GAChDC,QAAQC,IAAIF,IAAWG,cAYvBf,EAAS,CAAEK,KAAM,iBAAkBC,QAVG,IAAnCM,IAAWG,aAAaC,OACdJ,IAAWK,MAAMC,IAAI,SAAAC,GAC1B,OAAO,IAGFP,IAAWG,aAAaG,IAAI,SAACE,EAAIC,GACtC,OAAQA,IAAQV,EAAUS,EAAK,EAAKA,QC7B1CE,E,iLAEQ,IACCC,EAAQC,KAAKC,MAAbF,KAEP,OAAIA,EAKA,yBAAKG,UAAU,UAAUH,EAAKI,MAJvB,S,GANMC,IAAMC,WAmBhBC,cAJS,SAACC,EAAOC,GAC5B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,KAAK,SAAAX,GAAI,OAAIA,EAAKd,KAAOuB,EAASG,WAGlDL,CAAyBR,GCjBlCc,E,2MAKFC,OAAS,CACLC,OAAQ,W,mFAJRd,KAAKC,MAAMc,uB,4BAOTC,GACF,OAAuB,IAAfA,EAAoB,eAAiB,iB,mCAGnC,IAAD,OACT,OAAOhB,KAAKC,MAAMR,MAAMC,IAAI,SAACC,EAAMR,GAC/B,OACI,yBAAKe,UAAU,OAAOe,IAAKtB,EAAKV,IAC5B,uBAAGiB,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKP,EAAKuB,OACV,2BAAIvB,EAAKwB,OAEb,kBAAC,EAAD,CAAYR,OAAQhB,EAAKgB,SACzB,6BACI,yBAAKT,UAAU,gBAAgBkB,QAAS,kBAAM,EAAKnB,MAAMf,eAAeC,IAAQkC,MAAO,EAAKR,QACxF,uBAAGX,UAAW,EAAKoB,MAAM,EAAKrB,MAAMV,aAAaJ,OAErD,yBAAKe,UAAU,YAAgD,IAAnC,EAAKD,MAAMV,aAAaJ,GAAgB,KAAO,EAAKc,MAAMV,aAAaJ,W,+BAUvH,OAAO,yBAAKe,UAAU,2BAA2BF,KAAKuB,kB,GAtCvCnB,IAAMC,WA+CdC,cALS,SAAAC,GAEpB,OADAlB,QAAQC,IAAIiB,GACL,CAAEd,MAAOc,EAAMd,MAAOF,aAAcgB,EAAMhB,eAGb,CAAEwB,mBFjDR,SAAA9B,GAAE,6CAAI,WAAOT,EAAUY,GAAjB,SAAAX,EAAA,qEAC9BD,EAASD,KADqB,uBAE9BC,EAASU,KAFqB,OAIpBsC,IAAEC,KAAKD,IAAE9B,IAAIN,IAAWK,MAAO,WACvCiC,QAAQ,SAAAzC,GAAE,OAAIT,EAASQ,EAAUC,MALL,yCAAJ,yDEiD0BC,kBAA/CoB,CAAiEM,GCzCjEe,EARH,WACR,OACI,yBAAKzB,UAAU,gBACX,kBAAC,EAAD,Q,QCDG0B,cAAgB,CAC3BnC,MCNW,WAAyB,IAAxBc,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOhD,MACV,IAAK,cACD,OAAOgD,EAAO/C,QAClB,QACI,OAAOyB,IDEfE,MEPW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOhD,MACV,IAAK,aACD,MAAM,GAAN,mBAAW0B,GAAX,CAAkBsB,EAAO/C,UAC7B,QACI,OAAOyB,IFGfhB,aGRW,WAAyB,IAAxBgB,EAAuB,uDAAf,GAAIsB,EAAW,uCACnC,OAAOA,EAAOhD,MACV,IAAK,iBACD,OAAOgD,EAAO/C,QAClB,QACI,OAAOyB,MCIbuB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,cAAc,Y","file":"static/js/main.2a8c4c21.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com\"\r\n});\r\n\r\n","import jsonPlaceholder from '../apis/jsonPlaceholder';\r\nimport _ from 'lodash';\r\n\r\nexport const fetchPostsAndUsers = id => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n    await dispatch(loveCounterArr());\r\n    \r\n    const userIDs = _.uniq(_.map(getState().posts, 'userId'));\r\n    userIDs.forEach(id => dispatch(fetchUser(id)));\r\n};\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await jsonPlaceholder.get('/posts');\r\n    \r\n    dispatch({type: 'FETCH_POSTS', payload: response.data});\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    dispatch({ type: 'FETCH_USER', payload: response.data });\r\n};\r\n\r\nexport const loveCounterArr = (index) => (dispatch, getState) => {\r\n    console.log(getState().loveCountArr);\r\n    var newArr = [];\r\n    if(getState().loveCountArr.length === 0) {\r\n        newArr = getState().posts.map(post => {\r\n            return 0;\r\n        });\r\n    } else {\r\n        newArr = getState().loveCountArr.map((el, ind) => {\r\n            return (ind === index) ? (el + 1) : el;\r\n        });\r\n    }\r\n    \r\n    dispatch({ type: 'LOVE_COUNT_ARR', payload: newArr });\r\n};\r\n\r\n \r\n// memoize version\r\n//export const fetchUser = id => dispatch => _fetchUser(id, dispatch); \r\n//const _fetchUser = _.memoize(async(id, dispatch) => {\r\n    //const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    //dispatch({ type: 'FETCH_USER', payload: response.data });\r\n//});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n\r\n    render() {\r\n        const {user} = this.props;\r\n\r\n        if(!user) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div className=\"header\">{user.name}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers, loveCounterArr } from './actions/';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n\r\n    iStyle = {\r\n        cursor: 'pointer'\r\n    }\r\n\r\n    heart(heartCount) {\r\n        return (heartCount === 0) ? 'far fa-heart' : 'fas fa-heart';\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.posts.map((post, index) => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className=\"large middle aligned icon user\" />\r\n                    <div className=\"content\">\r\n                        <div className=\"description\">\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                        <div>\r\n                            <div className=\"d-inline mx-2\" onClick={() => this.props.loveCounterArr(index)} style={this.iStyle}>\r\n                                <i className={this.heart(this.props.loveCountArr[index])}></i>\r\n                            </div>\r\n                            <div className=\"d-inline\">{(this.props.loveCountArr[index] === 0) ? null : this.props.loveCountArr[index]}</div>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state);\r\n    return { posts: state.posts, loveCountArr: state.loveCountArr };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers, loveCounterArr })(PostList);\r\n","import React from 'react';\r\nimport PostList from './PostList'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport loveCounterArrReducer from './loveCounterArrReducer';\r\n\r\nexport default combineReducers({  \r\n    posts: postsReducer, \r\n    users: usersReducer,\r\n    loveCountArr: loveCounterArrReducer\r\n});","export default (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","export default (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_USER':\r\n            return [...state, action.payload];\r\n        default: \r\n            return state;\r\n    }\r\n}","export default (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'LOVE_COUNT_ARR':\r\n            return action.payload;\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers/';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}